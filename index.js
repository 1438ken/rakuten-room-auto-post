import axios from "axios";
import OpenAI from "openai";
import puppeteer from "puppeteer";
import dotenv from "dotenv";

dotenv.config();

const CHATGPT_API_KEY = process.env.CHATGPT_API_KEY;
const openai = new OpenAI({
  apiKey: CHATGPT_API_KEY,
});

const ROLE_CONTENT = `Please write short, attractive, friendly sentences to post on Rakuten ROOM so that people will want to buy your products.
- Please do not use "[ and ]" because they are garbled.
- Please use pictograms in moderation.
- Please add a relevant hashtag at the end of the sentence.
- Please keep it within 350 characters.
- Answer in the language asked.`;
// const ROLE_CONTENT = `Ê•ΩÂ§©ROOM„Å´ÊäïÁ®ø„Åô„ÇãÊñáÁ´†„ÇíÂïÜÂìÅ„ÇíË≥ºÂÖ•„Åó„Åü„Åè„Å™„Çã„Çà„ÅÜ„Å´È≠ÖÂäõÁöÑ„Å´„Éï„É¨„É≥„Éâ„É™„Éº„Å´Áü≠„ÅèÊõ∏„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
// - „Äê„Å®„Äë„ÅØÊñáÂ≠óÂåñ„Åë„Åô„Çã„ÅÆ„ÅßÁµ∂ÂØæ„Å´‰Ωø„Çè„Å™„ÅÑ„Åß„Åè„Å†„Åï„ÅÑ„ÄÇ
// - ÈÅ©Â∫¶„Å´ÁµµÊñáÂ≠ó„Çí‰Ωø„Å£„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
// - ÊñáÁ´†„ÅÆÊúÄÂæå„Å´Èñ¢ÈÄ£„Åô„Çã„Éè„ÉÉ„Ç∑„É•„Çø„Ç∞„Çí„Å§„Åë„Å¶„Åè„Å†„Åï„ÅÑ
// - 250ÊñáÂ≠ó‰ª•ÂÜÖ„Åß„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô„ÄÇ`;

const ASSISTANT_CONTENT = `
ü¶Ñ‚ú® „É¶„Éã„Ç≥„Éº„É≥„ÅåË™ò„ÅÜÈ≠îÊ≥ï„ÅÆ„É¶„Éº„Éà„Éî„Ç¢„Å∏„Çà„ÅÜ„Åì„Åù ‚ú®ü¶Ñ

üå∏üíñ „Ç∏„É´„Çπ„ÉÅ„É•„Ç¢„Éº„Éà„ÅÆÈôêÂÆö„Éõ„É™„Éá„Éº„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„Åß„ÄÅÂπªÊÉ≥ÁöÑ„Å™Èõ≤„ÅÆ‰∏ä„ÅÆ‰∏ñÁïå„Å∏‰∏ÄË∂≥ÂÖà„Å´„Éà„É™„ÉÉ„Éó„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ„É¶„Éã„Ç≥„Éº„É≥„É¶„Éº„Éà„Éî„Ç¢„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÅØ„ÄÅ„É¶„Éº„Éà„Éî„Ç¢„Å´Âí≤„ÅèËä±„ÄÖ„ÅÆÈ¶ô„Çä„Å®„Çπ„Ç¶„Ç£„Éº„Éà„É¶„Éº„Éà„Éî„Ç¢„Ç¨„Éº„Éá„É≥„ÅÆÈ¶ô„Çä„ÅåË©∞„Åæ„Å£„Åü„ÄÅÂ§¢Ë¶ãÂøÉÂú∞„ÅÆ„Çª„ÉÉ„Éà„Åß„Åô„ÄÇüíñüå∏

üåà Ëá™ÂàÜ„Å∏„ÅÆ„ÅîË§íÁæé„Å´„ÇÇ„ÄÅÂ§ßÂàá„Å™‰∫∫„Å∏„ÅÆÁâπÂà•„Å™„ÇÆ„Éï„Éà„Å´„ÇÇ„Å¥„Å£„Åü„Çä„ÄÇÁÖå„Å≥„ÇÑ„Åã„Å™„Ç¢„Ç§„Ç∑„É£„Éâ„Ç¶„ÄÅ„Åª„Çì„ÅÆ„ÇäËâ≤„Å•„Åè„ÉÅ„Éº„ÇØ„ÄÅÂîá„ÇíÂΩ©„Çã„É´„Éº„Ç∏„É•„ÄÅÊåáÂÖà„Åæ„ÅßÁæé„Åó„Åè„Åô„Çã„Éç„Ç§„É´„Ç™„Ç§„É´„ÄÅ„Åù„Åó„Å¶Èõ≤ÂΩ¢„ÅÆ„Ç≠„É•„Éº„Éà„Å™„Éù„Éº„ÉÅ„Åæ„Åß„ÄÅ„Åì„ÅÆ„Çª„ÉÉ„Éà‰∏Ä„Å§„Åß„É°„Ç§„ÇØ„ÅÆÂπÖ„ÅåÂ∫É„Åå„Çä„Åæ„Åô„ÄÇüåà

üéÅ LINE„ÇíÊñ∞Ë¶èËøΩÂä†„Åß250ÂÜÜOFF„ÇØ„Éº„Éù„É≥„Éó„É¨„Çº„É≥„Éà‰∏≠ÔºÅ‰ªä„Åô„Åê„ÅäÂèã„Å†„Å°„Å´„Å™„Å£„Å¶„ÄÅ„ÅäÂæó„Å´Â§¢„ÅÆ„Çà„ÅÜ„Å™„Éõ„É™„Éá„Éº„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÇíÊâã„Å´ÂÖ•„Çå„Å¶„Åè„Å†„Åï„ÅÑ„Å≠„ÄÇüéÅ

#JILLSTUART #„É¶„Éã„Ç≥„Éº„É≥„É¶„Éº„Éà„Éî„Ç¢ #„Éõ„É™„Éá„Éº„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥ #ÈôêÂÆö„Çª„ÉÉ„Éà #„É°„Ç§„ÇØ„Ç¢„ÉÉ„Éó #„ÇÆ„Éï„Éà„Çª„ÉÉ„Éà #ÁâπÂà•„Å™„Éó„É¨„Çº„É≥„Éà #„Çπ„Ç¶„Ç£„Éº„Éà„É¶„Éº„Éà„Éî„Ç¢ #„É°„Ç§„ÇØ„ÅÆÈ≠îÊ≥ï #LINE„Ç≠„É£„É≥„Éö„Éº„É≥ #„Éì„É•„Éº„ÉÜ„Ç£„Éº‰ΩìÈ®ì`;

const RAKUTEN_RANKING_URL =
  "https://app.rakuten.co.jp/services/api/IchibaItem/Ranking/20220601?genreId=100371&page=6";
// const RAKUTEN_SEARCH_URL = `https://app.rakuten.co.jp/services/api/IchibaItem/Search/20220601?format=json&availability=1&orFlag=0&keyword=„Éá„Ç£„Ç∫„Éã„Éº&page=2`;

async function getRakutenRankingData() {
  const response = await axios.get(RAKUTEN_RANKING_URL, {
    params: {
      applicationId: process.env.RAKUTEN_API_KEY,
    },
  });

  for (const element of response.data.Items) {
    try {
      const { catchcopy, itemName, itemCaption, itemCode } = element.Item;
      console.log("-----------------------------------------------");
      const url = `https://room.rakuten.co.jp/mix?itemcode=${itemCode}&scid=we_room_upc60`;
      console.log(url);
      // continue;

      console.log("1:" + new Date().toLocaleString());
      const productDescription = await generateProductDescription(
        catchcopy,
        itemName,
        itemCaption
      );
      console.log("2:" + new Date().toLocaleString());

      // const productDescription = `üéÑüéÅ ÂèØÊÑõ„ÅÑ„ÇØ„É™„Çπ„Éû„Çπ„Éë„ÉÉ„Ç±„Éº„Ç∏„Å´Ë©∞„Åæ„Å£„Åü„ÄÅÁ•ûÊà∏È¢®ÊúàÂ†Ç„ÅÆ„Äå„ÇØ„É™„Çπ„Éû„Çπ„Éü„Éã„Ç¥„Éº„Éï„É´ 2ÂÖ•„Äç„ÅØ„ÄÅ„ÇØ„É™„Çπ„Éû„Çπ„ÅÆ„ÅäËèìÂ≠ê„Å´„Å¥„Å£„Åü„Çä„Åß„ÅôÔºÅ„Çµ„É≥„Çø„Å®„ÇØ„Éû„ÅÆ„Åã„Çè„ÅÑ„ÅÑ„Éë„ÉÉ„Ç±„Éº„Ç∏„Å´„ÅØ„ÄÅ„Éê„Éã„É©„ÄÅ„Çπ„Éà„É≠„Éô„É™„ÉºÈ¢®Âë≥„ÄÅ„ÉÅ„Éß„Ç≥„É¨„Éº„Éà„ÅÆ3Á®ÆÈ°û„ÅÆ„ÇØ„É™„Éº„É†„ÅåË©∞„Åæ„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ
      // Â∞è„Åï„ÅÑ„Çµ„Ç§„Ç∫„Å™„ÅÆ„Åß„ÄÅ„Å°„Çá„Å£„Å®„Åó„ÅüË¥à„ÇäÁâ©„ÇÑ„ÅäÂúüÁî£„Å´„ÇÇÊúÄÈÅ©„Åß„Åô„ÄÇ„Åì„ÅÆ„ÇØ„É™„Çπ„Éû„Çπ„ÄÅÂøÉÊ∏©„Åæ„Çã„Ç¥„Éº„Éï„É´„ÅßÁâπÂà•„Å™„Éó„É¨„Çº„É≥„Éà„Çí„Åó„Åæ„Åõ„Çì„ÅãÔºüüòçüéÖüêª

      // #„ÇØ„É™„Çπ„Éû„Çπ„Éü„Éã„Ç¥„Éº„Éï„É´ #„Éó„ÉÅ„ÇÆ„Éï„Éà #„ÇØ„É™„Çπ„Éû„Çπ„Éó„É¨„Çº„É≥„Éà #„ÅäËèìÂ≠ê #ÂèØÊÑõ„ÅÑ„Éë„ÉÉ„Ç±„Éº„Ç∏ #Á•ûÊà∏È¢®ÊúàÂ†Ç #„ÅäÂúüÁî£ #Â∞è„Åï„ÅÑ„Çµ„Ç§„Ç∫ #„ÇØ„É™„Çπ„Éû„Çπ #„ÇÆ„Éï„Éà„Ç¢„Ç§„Éá„Ç¢`;

      // 500ÊñáÂ≠ó„Å´Âä†Â∑•
      const productDescription500 = productDescription.slice(0, 500);
      console.log(productDescription500);

      if (productDescription500) {
        await scrapeWebsite(
          url,
          process.env.USER_ID,
          process.env.USER_PASSWORD,
          productDescription500
        );
      }
    } catch (error) {
      console.error("Error:", error);
    }
  }
}

async function generateProductDescription(catchcopy, itemName, itemCaption) {
  try {
    const prompt = `‰ª•‰∏ã„ÅÆÂïÜÂìÅ„ÇíË≥ºÂÖ•„Åó„Åü„Åè„Å™„Çã„Çà„ÅÜ„Å´È≠ÖÂäõÁöÑ„Å´„Éï„É¨„É≥„Éâ„É™„Éº„Å´Áü≠„ÅèÊõ∏„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
250Â≠ó‰ª•ÂÜÖ„Å´Âèé„ÇÅ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

‰ª•‰∏ã„ÄÅÂïÜÂìÅ„ÅÆÁâπÂæ¥
${catchcopy} ${itemName}

${itemCaption}
`;

    const completion = await openai.chat.completions.create({
      messages: [
        {
          role: "system",
          content: ROLE_CONTENT,
        },
        {
          role: "assistant",
          content: ASSISTANT_CONTENT,
        },
        { role: "user", content: prompt },
      ],
      model: "gpt-3.5-turbo",
      // model: "gpt-4-1106-preview",
      // response_format: { type: "json_object" },
    });
    // console.log(completion.choices[0].message.content);

    return completion.choices[0].message.content.trim();
  } catch (error) {
    console.error("Error generating product description:", error);
    return "";
  }
}
function delay(ms) {
  return new Promise((resolve) => setTimeout(resolve, ms));
}

async function scrapeWebsite(url, userId, password, textToPaste) {
  console.log("3:" + new Date().toLocaleString());
  const browser = await puppeteer.launch({ headless: true });
  console.log("4:" + new Date().toLocaleString());
  const page = await browser.newPage();
  await page.setUserAgent(
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36"
  );
  console.log("5:" + new Date().toLocaleString());
  await page.goto(url);
  console.log("6:" + new Date().toLocaleString());
  // await page.waitForNavigation(); // „Éö„Éº„Ç∏ÈÅ∑Áßª„ÇíÂæÖ„Å§

  // „É≠„Ç∞„Ç§„É≥Âá¶ÁêÜ
  console.log("7:" + new Date().toLocaleString());
  await page.waitForSelector("#loginInner_u", { visible: true });
  await page.type("#loginInner_u", userId);

  console.log("8:" + new Date().toLocaleString());
  await page.waitForSelector("#loginInner_p", { visible: true });
  await page.type("#loginInner_p", password);

  console.log("9:" + new Date().toLocaleString());
  await page.click('input[value="„É≠„Ç∞„Ç§„É≥"]');

  console.log("10:" + new Date().toLocaleString());
  await page.waitForSelector("#collect-content", {
    visible: true,
  });
  await page.click("#collect-content");
  await page.waitForTimeout(500);
  await page.type("#collect-content", textToPaste, { delay: 10 });
  console.log("11:" + new Date().toLocaleString());

  await page.waitForSelector("button", { visible: true });
  const buttonToClick = await page.$x("//button[contains(., 'ÂÆå‰∫Ü')]");
  // await page.waitForTimeout(100); // 100„Éü„É™ÁßíÂæÖ„Å§

  if (buttonToClick.length > 0) {
    console.log("12:" + new Date().toLocaleString());
    await buttonToClick[0].click();
    await page.waitForTimeout(500);
  }

  // await page.waitForNavigation(); // „Éö„Éº„Ç∏ÈÅ∑Áßª„ÇíÂæÖ„Å§
  console.log("13:" + new Date().toLocaleString());
  await browser.close();
  console.log("14:" + new Date().toLocaleString());
}

getRakutenRankingData();
